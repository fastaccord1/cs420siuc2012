
/*
 *
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cs420.buySell.gui;

import java.awt.event.ActionEvent;
import java.net.InetAddress;
import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import cs420.buySell.client.*;
import cs420.buySell.database.*;
//import net.proteanit.sql.DbUtils;


/**
 *
 * @author Matt
 */
public class BuySellUI extends javax.swing.JFrame {

    /**
     * Creates new form BuySellUI
     */
    String user = null;
    private ClientSocket socket;
    private ClientServerComm comm;
    
    public BuySellUI(String username) {
        initComponents();
        this.user = username;
        this.refreshWTB();
        this.refreshMyWTS();
        this.refreshWTS();
        this.refreshMyWTB();
        this.refreshVendors();
        socket = new ClientSocket(this);
        socket.start();
        comm = new ClientServerComm();
        Thread commThread = new Thread(comm);
        commThread.start();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        wtb_panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        wtb = new javax.swing.JTable();
        wtb_refresh = new javax.swing.JButton();
        wtb_item_details = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        wtb_vendor_info = new javax.swing.JButton();
        sellList_panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        wtsItem = new javax.swing.JTable();
        sellList_add = new javax.swing.JButton();
        sellList_delete = new javax.swing.JButton();
        sellList_save = new javax.swing.JButton();
        sellList_exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        wts_panel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        wts = new javax.swing.JTable();
        wts_refresh = new javax.swing.JButton();
        wts_Item_Details = new javax.swing.JButton();
        wts_Vendor_Info = new javax.swing.JButton();
        wts_exit = new javax.swing.JButton();
        buying_panel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        wtb_Listing = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        buying_addItem = new javax.swing.JButton();
        buying_delete = new javax.swing.JButton();
        buying_save = new javax.swing.JButton();
        buying_exit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        vendor_panel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        vendors_Table = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        wtb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Vendor", "Date Available", "Quantity Available", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(wtb);

        wtb_refresh.setText("Refresh");
        wtb_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wtb_refreshActionPerformed(evt);
            }
        });

        wtb_item_details.setText("Item Details");
        wtb_item_details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wtb_item_detailsActionPerformed(evt);
            }
        });

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        wtb_vendor_info.setText("Vendor Info");
        wtb_vendor_info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wtb_vendor_infoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout wtb_panelLayout = new javax.swing.GroupLayout(wtb_panel);
        wtb_panel.setLayout(wtb_panelLayout);
        wtb_panelLayout.setHorizontalGroup(
            wtb_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wtb_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wtb_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(wtb_item_details, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(wtb_vendor_info, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        wtb_panelLayout.setVerticalGroup(
            wtb_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wtb_panelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addGroup(wtb_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wtb_refresh)
                    .addComponent(wtb_item_details)
                    .addComponent(jButton3)
                    .addComponent(wtb_vendor_info))
                .addGap(25, 25, 25))
        );

        jTabbedPane2.addTab("WTB", wtb_panel);

        wtsItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Listing ID", "Item ID", "Item Name", "Manufacturer", "Item Class", "Vendor", "Available Date", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        wtsItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myWTSClick(evt);
            }
        });
        jScrollPane1.setViewportView(wtsItem);

        sellList_add.setText("Add New Item");
        sellList_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellList_addActionPerformed(evt);
            }
        });

        sellList_delete.setText("Remove Selected Item");
        sellList_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellList_deleteActionPerformed(evt);
            }
        });

        sellList_save.setText("Save Changes");
        sellList_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellList_saveActionPerformed(evt);
            }
        });

        sellList_exit.setText("Exit");
        sellList_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellList_exitActionPerformed(evt);
            }
        });

        jLabel1.setText("Item ID");

        jLabel3.setText("Item Name");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Manufacturer");

        jLabel5.setText("Item Class");

        jLabel6.setText("Quantity");

        jLabel7.setText("Vendor");

        jLabel8.setText("Available Date");

        jLabel9.setText("Price");

        jLabel24.setText("Listing ID");

        javax.swing.GroupLayout sellList_panelLayout = new javax.swing.GroupLayout(sellList_panel);
        sellList_panel.setLayout(sellList_panelLayout);
        sellList_panelLayout.setHorizontalGroup(
            sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(sellList_panelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sellList_panelLayout.createSequentialGroup()
                        .addComponent(sellList_add)
                        .addGap(52, 52, 52)
                        .addComponent(sellList_delete))
                    .addGroup(sellList_panelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField24)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jTextField1))))
                .addGap(57, 57, 57)
                .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sellList_panelLayout.createSequentialGroup()
                        .addComponent(sellList_save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addComponent(sellList_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(sellList_panelLayout.createSequentialGroup()
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sellList_panelLayout.createSequentialGroup()
                                    .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addGap(33, 33, 33))
                                .addGroup(sellList_panelLayout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(79, 79, 79)))
                            .addGroup(sellList_panelLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)))
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField7)
                            .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addContainerGap(115, Short.MAX_VALUE))))
        );
        sellList_panelLayout.setVerticalGroup(
            sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellList_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(sellList_panelLayout.createSequentialGroup()
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9)
                    .addGroup(sellList_panelLayout.createSequentialGroup()
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(sellList_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sellList_add)
                    .addComponent(sellList_delete)
                    .addComponent(sellList_save)
                    .addComponent(sellList_exit))
                .addGap(46, 46, 46))
        );

        jTabbedPane2.addTab("My Items for Sale", sellList_panel);

        wts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Vendor", "Type", "Date Available", "Quantity Available", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(wts);

        wts_refresh.setText("Refresh");
        wts_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wts_refreshActionPerformed(evt);
            }
        });

        wts_Item_Details.setText("Item Details");
        wts_Item_Details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wts_Item_DetailsActionPerformed(evt);
            }
        });

        wts_Vendor_Info.setText("Vendor Info");
        wts_Vendor_Info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wts_Vendor_InfoActionPerformed(evt);
            }
        });

        wts_exit.setText("Exit");
        wts_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wts_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout wts_panelLayout = new javax.swing.GroupLayout(wts_panel);
        wts_panel.setLayout(wts_panelLayout);
        wts_panelLayout.setHorizontalGroup(
            wts_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
            .addGroup(wts_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wts_refresh)
                .addGap(42, 42, 42)
                .addComponent(wts_Item_Details)
                .addGap(50, 50, 50)
                .addComponent(wts_Vendor_Info)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(wts_exit)
                .addGap(27, 27, 27))
        );
        wts_panelLayout.setVerticalGroup(
            wts_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wts_panelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(wts_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wts_refresh)
                    .addComponent(wts_Item_Details)
                    .addComponent(wts_Vendor_Info)
                    .addComponent(wts_exit))
                .addGap(53, 53, 53))
        );

        jTabbedPane2.addTab("WTS", wts_panel);

        wtb_Listing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Listing ID", "Item ID", "Item Name", "Manufacturer", "Item Class", "Customer ID", "Type", "Need By", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        wtb_Listing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wtb_ListingMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(wtb_Listing);

        jLabel10.setText("Item ID");

        jLabel11.setText("Item Name");

        jLabel12.setText("Manufacturer");

        jLabel13.setText("Item Class");

        jLabel14.setText("Customer ID");

        jLabel15.setText("Type");

        jLabel16.setText("Need By");

        jLabel17.setText("Quantity");

        jLabel18.setText("Price");

        buying_addItem.setText("Add Item");
        buying_addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buying_addItemActionPerformed(evt);
            }
        });

        buying_delete.setText("Remove Selected Item");
        buying_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buying_deleteActionPerformed(evt);
            }
        });

        buying_save.setText("Save Changes");
        buying_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buying_saveActionPerformed(evt);
            }
        });

        buying_exit.setText("Exit");

        jLabel2.setText("Listing ID");

        jTextField23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buying_panelLayout = new javax.swing.GroupLayout(buying_panel);
        buying_panel.setLayout(buying_panelLayout);
        buying_panelLayout.setHorizontalGroup(
            buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(buying_panelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buying_panelLayout.createSequentialGroup()
                        .addComponent(buying_addItem)
                        .addGap(18, 18, 18)
                        .addComponent(buying_delete)
                        .addGap(31, 31, 31)
                        .addComponent(buying_save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                        .addComponent(buying_exit)
                        .addGap(29, 29, 29))
                    .addGroup(buying_panelLayout.createSequentialGroup()
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel2))
                        .addGap(32, 32, 32)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField23)
                            .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jTextField10)
                            .addComponent(jTextField11)
                            .addComponent(jTextField12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17))
                        .addGap(45, 45, 45)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField14)
                                .addComponent(jTextField15)
                                .addComponent(jTextField16)
                                .addComponent(jTextField17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89))))
        );
        buying_panelLayout.setVerticalGroup(
            buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buying_panelLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buying_panelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buying_panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(buying_panelLayout.createSequentialGroup()
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)))
                    .addGroup(buying_panelLayout.createSequentialGroup()
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(buying_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buying_addItem)
                    .addComponent(buying_delete)
                    .addComponent(buying_save)
                    .addComponent(buying_exit))
                .addGap(28, 28, 28))
        );

        jTabbedPane2.addTab("Items I Want", buying_panel);

        vendors_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vendor ID", "Vendor Name", "Address", "Licenses", "Current"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vendors_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendors_TableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(vendors_Table);

        jLabel19.setText("Vendor ID");

        jLabel20.setText("Vendor Name");

        jLabel21.setText("Address");

        jLabel22.setText("Current");

        jLabel23.setText("Licenses");

        jButton17.setText("Add New Vendor");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Cancel Vendor");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Save Changes");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Exit");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout vendor_panelLayout = new javax.swing.GroupLayout(vendor_panel);
        vendor_panel.setLayout(vendor_panelLayout);
        vendor_panelLayout.setHorizontalGroup(
            vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(vendor_panelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vendor_panelLayout.createSequentialGroup()
                        .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGap(51, 51, 51)
                        .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField18, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jTextField19)
                            .addComponent(jTextField20)
                            .addComponent(jTextField21)
                            .addComponent(jTextField22))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(vendor_panelLayout.createSequentialGroup()
                        .addComponent(jButton17)
                        .addGap(18, 18, 18)
                        .addComponent(jButton18)
                        .addGap(18, 18, 18)
                        .addComponent(jButton19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        vendor_panelLayout.setVerticalGroup(
            vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vendor_panelLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(vendor_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17)
                    .addComponent(jButton18)
                    .addComponent(jButton19)
                    .addComponent(jButton20))
                .addGap(29, 29, 29))
        );

        jTabbedPane2.addTab("My Vendors", vendor_panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-714)/2, (screenSize.height-545)/2, 714, 545);
    }// </editor-fold>//GEN-END:initComponents

    private void wtb_refreshActionPerformed(ActionEvent evt) {//GEN-FIRST:event_wtb_refreshActionPerformed
        // TODO add your handling code here:
        
        this.refreshWTB();
    }//GEN-LAST:event_wtb_refreshActionPerformed

    private void jTextField2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void sellList_exitActionPerformed(ActionEvent evt) {//GEN-FIRST:event_sellList_exitActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_sellList_exitActionPerformed

    private void jButton3ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void buying_deleteActionPerformed(ActionEvent evt) {//GEN-FIRST:event_buying_deleteActionPerformed
        // TODO add your handling code here:
        
                try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement inst = null;
        ResultSet rs = null;
        
        int row = wtb_Listing.getSelectedRow();
        String r1 = wtb_Listing.getModel().getValueAt(row, 0).toString();
        inst=con.createStatement();
        inst.executeUpdate(q.qDeleteWTB(r1));

        this.refreshMyWTB();
        this.refreshWTS();
        
        String SQL = q.qGetUserPool();
        rs = stmt.executeQuery(SQL);
        socket.updateBuy(rs);

        }
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }
    }//GEN-LAST:event_buying_deleteActionPerformed

    private void wtb_vendor_infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wtb_vendor_infoActionPerformed
        // TODO add your handling code here:
       int row = wtb.getSelectedRow();
       String s1 = wtb.getModel().getValueAt(row, 1).toString();
       new Vendor(s1).setVisible(true);

    
    }//GEN-LAST:event_wtb_vendor_infoActionPerformed

    private void wtb_item_detailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wtb_item_detailsActionPerformed
        // TODO add your handling code here:
        
        int row = wtb.getSelectedRow();
        String s1 = wtb.getModel().getValueAt(row, 0).toString();
        String s2 = wtb.getModel().getValueAt(row, 1).toString();
        String s3 = wtb.getModel().getValueAt(row, 2).toString();
        String s4 = wtb.getModel().getValueAt(row, 3).toString();
        String s5 = wtb.getModel().getValueAt(row, 4).toString();
       
        new ItemDetails(s1,s2,s3,s5,s4).setVisible(true);
    }//GEN-LAST:event_wtb_item_detailsActionPerformed

    private void myWTSClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myWTSClick
        // TODO add your handling code here:
                // TODO add your handling code here:
        try{
            int row = wtsItem.getSelectedRow();
            String r1 = wtsItem.getModel().getValueAt(row, 0).toString();
            String r2 = wtsItem.getModel().getValueAt(row, 1).toString();
            String r3 = wtsItem.getModel().getValueAt(row, 2).toString();
            String r4 = wtsItem.getModel().getValueAt(row, 3).toString();
            String r5 = wtsItem.getModel().getValueAt(row, 4).toString();
            String r6 = wtsItem.getModel().getValueAt(row, 5).toString();
            String r7 = wtsItem.getModel().getValueAt(row, 6).toString();
            String r8 = wtsItem.getModel().getValueAt(row, 7).toString();
            String r9 = wtsItem.getModel().getValueAt(row, 8).toString();
            jTextField24.setText(r1);
            jTextField1.setText(r2);
            jTextField2.setText(r3);
            jTextField3.setText(r4);
            jTextField4.setText(r5);
            jTextField5.setText(r6);
            jTextField6.setText(r7);
            jTextField7.setText(r8);
            jTextField8.setText(r9);
            

        }

        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }
    
    }//GEN-LAST:event_myWTSClick

    private void sellList_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellList_deleteActionPerformed
        
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement inst = null;
        ResultSet rs = null;
        
        int row = wtsItem.getSelectedRow();
        String r1 = wtsItem.getModel().getValueAt(row, 0).toString();
        inst=con.createStatement();
        inst.executeUpdate(q.qDeleteWTS(r1));

        this.refreshMyWTS();
        this.refreshWTB();
        
        String SQL = q.qGetUserPool();
        rs = stmt.executeQuery(SQL);
        socket.updateSell(rs);
        

        }
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }
        
    }//GEN-LAST:event_sellList_deleteActionPerformed

    private void wts_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wts_refreshActionPerformed
        // TODO add your handling code here:

        this.refreshWTS();
    }//GEN-LAST:event_wts_refreshActionPerformed

    private void wts_Item_DetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wts_Item_DetailsActionPerformed
        // TODO add your handling code here:
        int row = wts.getSelectedRow();
        String s1 = wts.getModel().getValueAt(row, 0).toString();
        String s2 = wts.getModel().getValueAt(row, 1).toString();
        String s3 = wts.getModel().getValueAt(row, 3).toString();
        String s4 = wts.getModel().getValueAt(row, 4).toString();
        String s5 = wts.getModel().getValueAt(row, 5).toString();
       
        new ItemDetails(s1,s2,s3,s5,s4).setVisible(true);
    }//GEN-LAST:event_wts_Item_DetailsActionPerformed

    private void wts_Vendor_InfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wts_Vendor_InfoActionPerformed
        // TODO add your handling code here:
       int row = wts.getSelectedRow();
       String s1 = wts.getModel().getValueAt(row, 1).toString();
       new Vendor(s1).setVisible(true);
    }//GEN-LAST:event_wts_Vendor_InfoActionPerformed

    private void wts_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wts_exitActionPerformed
        System.exit(1);
    }//GEN-LAST:event_wts_exitActionPerformed

    private void buying_addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buying_addItemActionPerformed
        // TODO add your handling code here:
        
        String s1 = jTextField23.getText();
        String s2 =jTextField9.getText();
        String s3 =jTextField10.getText();
        String s4 =jTextField11.getText();
        String s5 =jTextField12.getText();
        String s6 =jTextField13.getText();
        String s7 =jTextField14.getText();
        String s8 =jTextField15.getText();
        String s9 =jTextField16.getText();
        String s10 =jTextField17.getText();
            
           
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement inst = null;
        Statement st = null;
        Statement st2 = null;
        ResultSet rs = null;
        ResultSet rs2 = null;
        


        String SQL = q.qGetVendors(s6, "nil", "nil", "nil");
        stmt = con.createStatement();
        inst=con.createStatement();
        st = con.createStatement();
        
         
        rs = stmt.executeQuery(SQL);

        if(rs.next()){

            String items = q.qGetItems(s3, "nil", "nil");
            rs2 = st.executeQuery(items);
            if(!(rs2.next())){
                st2 = con.createStatement();
                st2.executeUpdate(q.qInsertItem(s2, s3, s4, s5));
            
               
            }
            
            s6 = rs.getString(1);
        
            inst.executeUpdate((q.qInsertWTB(s1, s2, s9, s7, s8, s6,s10)));
            
            this.refreshMyWTB();
            this.refreshWTS();
            
            SQL = q.qGetUserPool();
            rs = stmt.executeQuery(SQL);
            socket.updateBuy(rs);
        }
        }
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }


    }//GEN-LAST:event_buying_addItemActionPerformed

    private void sellList_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellList_addActionPerformed
        // TODO add your handling code here:
            String s1 = jTextField24.getText();
            String s2 =jTextField1.getText();
            String s3 =jTextField2.getText();
            String s4 =jTextField3.getText();
            String s5 =jTextField4.getText();
            String s6 =jTextField5.getText();
            String s7 =jTextField6.getText();
            String s8 =jTextField7.getText();
            String s9 =jTextField8.getText();
            
           
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement inst = null;
        Statement st = null;
        Statement st2 = null;
        ResultSet rs = null;
        ResultSet rs2 = null;

        String SQL = q.qGetVendors(s6, "nil", "nil", "nil");
        stmt = con.createStatement();
        inst=con.createStatement();
        st = con.createStatement();
        
         
        rs = stmt.executeQuery(SQL);

        if(rs.next()){
 
            String items = q.qGetItems(s3, "nil", "nil");
            rs2 = st.executeQuery(items);
            if(!(rs2.next())){
                st2 = con.createStatement();
                st2.executeUpdate(q.qInsertItem(s2, s3, s4, s5));
            

            }
            
            s6 = rs.getString(1);
        
            
            inst.executeUpdate((q.qInsertWTS(s1, s2, s6, s8, s9, s7)));
            this.refreshMyWTS();
            this.refreshWTB();
            SQL = q.qGetUserPool();
            rs = stmt.executeQuery(SQL);
            socket.updateSell(rs);
        }
        }
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }


            
        
    }//GEN-LAST:event_sellList_addActionPerformed

    private void jTextField23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField23ActionPerformed

    private void wtb_ListingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wtb_ListingMouseClicked
        // TODO add your handling code here:
        
            int row = wtb_Listing.getSelectedRow();
            String r1 = wtb_Listing.getModel().getValueAt(row, 0).toString();
            String r2 = wtb_Listing.getModel().getValueAt(row, 1).toString();
            String r3 = wtb_Listing.getModel().getValueAt(row, 2).toString();
            String r4 = wtb_Listing.getModel().getValueAt(row, 3).toString();
            String r5 = wtb_Listing.getModel().getValueAt(row, 4).toString();
            String r6 = wtb_Listing.getModel().getValueAt(row, 5).toString();
            String r7 = wtb_Listing.getModel().getValueAt(row, 6).toString();
            String r8 = wtb_Listing.getModel().getValueAt(row, 7).toString();
            String r9 = wtb_Listing.getModel().getValueAt(row, 8).toString();
            String r10 = wtb_Listing.getModel().getValueAt(row, 9).toString();
            jTextField23.setText(r1);
            jTextField9.setText(r2);
            jTextField10.setText(r3);
            jTextField11.setText(r4);
            jTextField12.setText(r5);
            jTextField13.setText(r6);
            jTextField14.setText(r7);
            jTextField15.setText(r8);
            jTextField16.setText(r9);
            jTextField17.setText(r10);
        
    }//GEN-LAST:event_wtb_ListingMouseClicked

    private void vendors_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendors_TableMouseClicked
        // TODO add your handling code here:
            int row = vendors_Table.getSelectedRow();
            String r1 = vendors_Table.getModel().getValueAt(row, 0).toString();
            String r2 = vendors_Table.getModel().getValueAt(row, 1).toString();
            String r3 = vendors_Table.getModel().getValueAt(row, 2).toString();
            String r4 = vendors_Table.getModel().getValueAt(row, 3).toString();
            String r5 = vendors_Table.getModel().getValueAt(row, 4).toString();

            jTextField18.setText(r1);
            jTextField19.setText(r2);
            jTextField20.setText(r3);
            jTextField21.setText(r4);
            jTextField22.setText(r5);

    }//GEN-LAST:event_vendors_TableMouseClicked

    private void sellList_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellList_saveActionPerformed
        // TODO add your handling code here:
        String s1 = jTextField24.getText();
        String s2 =jTextField1.getText();
        String s3 =jTextField2.getText();
        String s4 =jTextField3.getText();
        String s5 =jTextField4.getText();
        String s6 =jTextField5.getText();
        String s7 =jTextField6.getText();
        String s8 =jTextField7.getText();
        String s9 =jTextField8.getText();
            
           
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement inst = null;
        Statement st = null;
        Statement st2 = null;
        ResultSet rs = null;
        ResultSet rs2 = null;
        


        String SQL = q.qGetVendors(s6, "nil", "nil", "nil");
        stmt = con.createStatement();
        inst=con.createStatement();
        st = con.createStatement();
        
         
        rs = stmt.executeQuery(SQL);

        if(rs.next()){

            String items = q.qGetItems(s3, "nil", "nil");
            rs2 = st.executeQuery(items);
            if(!(rs2.next())){
                st2 = con.createStatement();
                st2.executeUpdate(q.qInsertItem(s2, s3, s4, s5));
            
 
            }
            
            s6 = rs.getString(1);
        
            
            inst.executeUpdate((q.qUpdateWTS(s2, s6, s8, s9, s7, s1)));
            this.refreshMyWTS();
            this.refreshWTB();
            SQL = q.qGetUserPool();
            rs = stmt.executeQuery(SQL);
            socket.updateSell(rs);
        }
        }
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }

    }//GEN-LAST:event_sellList_saveActionPerformed

    private void buying_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buying_saveActionPerformed
        // TODO add your handling code here:
        
              
        String s1 = jTextField23.getText();
        String s2 =jTextField9.getText();
        String s3 =jTextField10.getText();
        String s4 =jTextField11.getText();
        String s5 =jTextField12.getText();
        String s6 =jTextField13.getText();
        String s7 =jTextField14.getText();
        String s8 =jTextField15.getText();
        String s9 =jTextField16.getText();
        String s10 =jTextField17.getText();
            
           
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement inst = null;
        Statement st = null;
        Statement st2 = null;
        ResultSet rs = null;
        ResultSet rs2 = null;
        


        String SQL = q.qGetVendors(s6, "nil", "nil", "nil");
        stmt = con.createStatement();
        inst=con.createStatement();
        st = con.createStatement();
        
         
        rs = stmt.executeQuery(SQL);

        if(rs.next()){

            String items = q.qGetItems(s3, "nil", "nil");
            rs2 = st.executeQuery(items);
            if(!(rs2.next())){
                st2 = con.createStatement();
                st2.executeUpdate(q.qInsertItem(s2, s3, s4, s5));
            
               
            }
            
            s6 = rs.getString(1);

            inst.executeUpdate((q.qUpdateWTB(s2, s9, s7, s8, s6, s10,s1)));
            
            this.refreshMyWTB();
            this.refreshWTS();
            
            SQL = q.qGetUserPool();
            rs = stmt.executeQuery(SQL);
            socket.updateBuy(rs);
        }
        }
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }

    }//GEN-LAST:event_buying_saveActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        
            String s1 = jTextField18.getText();
            String s2 =jTextField19.getText();
            String s3 =jTextField20.getText();
            String s4 =jTextField21.getText();
            String s5 =jTextField22.getText();

            
           
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();

        Statement inst = null;
        

        inst=con.createStatement();


        

            inst.executeUpdate((q.qInsertVendor(s1, s2, s3, s5, s4)));
            this.refreshVendors();
        }
        
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        
            String s1 = jTextField18.getText();
            String s2 = jTextField19.getText();
            String s3 = jTextField20.getText();
            String s4 = jTextField21.getText();
            String s5 = jTextField22.getText();
            
            

            
           
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        
        

        Statement inst = null;
        

        inst=con.createStatement();


        

            inst.executeUpdate((q.qUpdateVendors(s2, s3, "0", s5, s2)));
            this.refreshVendors();
        }
        
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        
             // TODO add your handling code here:
        
            String s1 = jTextField18.getText();
            String s2 =jTextField19.getText();
            String s3 =jTextField20.getText();
            String s4 =jTextField21.getText();
            String s5 =jTextField22.getText();

            
           
        try{
            
       
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();

        Statement inst = null;
        

        inst=con.createStatement();




            inst.executeUpdate((q.qUpdateVendors(s2, s3, s4, s5, s1)));
            this.refreshVendors();
        }
        
       
         catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());

        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jButton20ActionPerformed


    
    
    
    
    
    
    
    public void refreshWTB(){
        DefaultTableModel model=(DefaultTableModel)wtb.getModel();
        model.setRowCount(0);
        
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        ResultSet rs = null;
        Statement inst = null;
        
        try {

    	 String SQL =q.qGetWTSFull("nil", "nil", "nil", "nil", "nil", "nil", "nil","nil");

         stmt = con.createStatement();
         inst=con.createStatement();
         
         rs = stmt.executeQuery(SQL);
         while(rs.next()){

             String d1=rs.getString(2);
              String d2=rs.getString(5);
              String d3=rs.getString(9);
              String d4=rs.getString(7);
              String d5=rs.getString(8);


              model.addRow(new Object[]{d1,d2,this.formatDate(d3),d4,this.formatPrice(d5)});

            }


      }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }
      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
      }
    
    
    
    }
    
    public void refreshMyWTS(){
        DefaultTableModel model=(DefaultTableModel)wtsItem.getModel();
        model.setRowCount(0);
        
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement stmt2 = null;
        Statement stmt3 = null;
        Statement stmt4 = null;

        ResultSet rs = null;
        ResultSet rs2 = null;
        ResultSet rs_users = null;
        ResultSet rs_vendors = null;
        
        try {

            
         String sql_users = q.qGetUsers(user, "nil", "nil");


         stmt = con.createStatement();


         stmt4 = con.createStatement();

         

         
         rs_users = stmt.executeQuery(sql_users);
         
         while(rs_users.next()){
             String vendorID = rs_users.getString(2);

             stmt2 = con.createStatement();
             String sql_vendors = "Select * from Vendors where id ="+vendorID;
             rs_vendors = stmt2.executeQuery(sql_vendors);
            while(rs_vendors.next()){
                
                
         //ppppppppppppppppppppppppppppppppppppppppppppp   
    	 String SQL =q.qGetWTSFull("nil", "nil", "nil", rs_vendors.getString(2), "nil", "nil", "nil","nil");


         stmt3= con.createStatement();
        
         rs = stmt3.executeQuery(SQL);
         while(rs.next()){
              String d1=rs.getString(1);
              String d2="";
              String d3=rs.getString(2);
              String d4=rs.getString(3);
              String d5=rs.getString(4);
 
              stmt = con.createStatement();
              rs2 = stmt4.executeQuery(q.qGetItems(d3, "nil", "nil"));
              if(rs2.next()){
                  d2 = rs2.getString(1);
              }

              String d6=rs.getString(5);
              String d7=rs.getString(9);
              String d8=rs.getString(7);
              String d9=rs.getString(8);

              model.addRow(new Object[]{d1,d2,d3,d4,d5,d6,this.formatDate(d7),d8,this.formatPrice(d9)});

            }
            
            }
      }
        }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }
      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
        }
    
    
    }
    
    public void refreshWTS(){
        DefaultTableModel model=(DefaultTableModel)wts.getModel();
        model.setRowCount(0);
        
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        ResultSet rs = null;
        Statement inst = null;
        
        try {

    	 String SQL =q.qGetWTBFull("nil", "nil", "nil", "nil", "nil", "nil", "nil","nil", "nil");

         stmt = con.createStatement();
         inst=con.createStatement();
         
         rs = stmt.executeQuery(SQL);
         while(rs.next()){

             String d1=rs.getString(2);
              String d2=rs.getString(5);
              String d3=rs.getString(9);
              String d4=rs.getString(7);
              String d5=rs.getString(8);
              String d6 = rs.getString(10);


              model.addRow(new Object[]{d1,d2,d6,this.formatDate(d3),d4,this.formatPrice(d5)});
              
              

            }


      }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }
      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
      }
    
    
    
    }
    
    public void refreshMyWTB(){
        DefaultTableModel model=(DefaultTableModel)wtb_Listing.getModel();
        model.setRowCount(0);
        
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        Statement stmt2 = null;
        ResultSet rs = null;
        ResultSet rs2 = null;
        Statement inst = null;
        
        try {

    	 String SQL =q.qGetWTBFull("nil", "nil", "nil", "nil", "nil", "nil", "nil","nil","nil");

         stmt = con.createStatement();
         inst=con.createStatement();
         
         rs = stmt.executeQuery(SQL);
         while(rs.next()){
             
              
              String d1=rs.getString(1);
              String d2="";
              String d3=rs.getString(2);
              String d4=rs.getString(3);
              String d5=rs.getString(4);
              
              stmt = con.createStatement();
              rs2 = stmt.executeQuery(q.qGetItems(d3, "nil", "nil"));
              if(rs2.next()){
                  d2 = rs2.getString(1);
              }

              
              String d6=rs.getString(5);
              String d7=rs.getString(9);
              String d8=rs.getString(7);
              String d9=rs.getString(8);
              String d10=rs.getString(10);

  


              model.addRow(new Object[]{d1,d2,d3,d4,d5,d6,d10,this.formatDate(d7),d8,this.formatPrice(d9)});

            }


      }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }
      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
      }
    
    
    
    }
    
    
      public void refreshVendors(){
        DefaultTableModel model=(DefaultTableModel)vendors_Table.getModel();
        model.setRowCount(0);
        
        DB_Conn dbcon=new DB_Conn();
        Connection con = dbcon.getCon();
        Queries q = new Queries();
        Statement stmt = null;
        ResultSet rs = null;
        Statement st2 = null;
        ResultSet rs2 = null;
        
        try {
            

         String SQL = q.qGetUsers(user, "nil", "nil");


         stmt = con.createStatement();
         st2 = con.createStatement();

         
         rs = stmt.executeQuery(SQL);
         
         while(rs.next()){
             String vendorID = rs.getString(2);
             st2 = con.createStatement();
             
             String sql2 = "Select * from Vendors where id ="+vendorID;
             
             rs2 = st2.executeQuery(sql2);
             
             while(rs2.next()){
              String d1=rs2.getString(1);
              String d2=rs2.getString(2);
              String d3=rs2.getString(3);
              String d4=rs2.getString(4);
              String d5=rs2.getString(5);
              model.addRow(new Object[]{d1,d2,d3,d4,d5}); 
             
             }
             
         }
              

                   
            
            /*

    	 String SQL =q.qGetVendors("nil", "nil", "nil", "nil");

         stmt = con.createStatement();
         inst=con.createStatement();
         
         rs = stmt.executeQuery(SQL);
         while(rs.next()){

             String d1=rs.getString(1);
              String d2=rs.getString(2);
              String d3=rs.getString(3);
              String d4=rs.getString(4);
              String d5=rs.getString(5);
              

              model.addRow(new Object[]{d1,d2,d3,d4,d5});

            }*/


      }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }
      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
      }
    
    
    
    } 
    
    public String formatPrice(String price){
        String formatedPrice = price;
        
        formatedPrice = price.substring(0,price.length()-2);

    
        return formatedPrice;
    }
    
    public String formatDate(String date){
            String formatedDate = date;
            
            formatedDate = date.substring(0,9);

            
            return formatedDate;
            
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuySellUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuySellUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuySellUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuySellUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuySellUI("matt").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buying_addItem;
    private javax.swing.JButton buying_delete;
    private javax.swing.JButton buying_exit;
    private javax.swing.JPanel buying_panel;
    private javax.swing.JButton buying_save;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton sellList_add;
    private javax.swing.JButton sellList_delete;
    private javax.swing.JButton sellList_exit;
    private javax.swing.JPanel sellList_panel;
    private javax.swing.JButton sellList_save;
    private javax.swing.JPanel vendor_panel;
    private javax.swing.JTable vendors_Table;
    private javax.swing.JTable wtb;
    private javax.swing.JTable wtb_Listing;
    private javax.swing.JButton wtb_item_details;
    private javax.swing.JPanel wtb_panel;
    private javax.swing.JButton wtb_refresh;
    private javax.swing.JButton wtb_vendor_info;
    private javax.swing.JTable wts;
    private javax.swing.JTable wtsItem;
    private javax.swing.JButton wts_Item_Details;
    private javax.swing.JButton wts_Vendor_Info;
    private javax.swing.JButton wts_exit;
    private javax.swing.JPanel wts_panel;
    private javax.swing.JButton wts_refresh;
    // End of variables declaration//GEN-END:variables
}
